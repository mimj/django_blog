# Generated by Django 3.0.3 on 2020-03-02 18:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import faker.providers.lorem
from redis import ResponseError
from redisearch import Client, TextField


def create_redisearch_index(apps, schema_editor):
    # Creating a client with a given index name
    client = None
    try:
        client = Client('blog_index')
        # Creating the index definition and schema
        client.create_index([TextField('title', weight=5.0), TextField('body')])
    except ResponseError:
        print('Index Already Exists')


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('body', models.TextField(default=faker.providers.lorem.Provider.text)),
                ('publish', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft',
                                            max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts',
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
        migrations.RunPython(create_redisearch_index)
    ]
